diff --git a/alphafold/alphafold/data/pipeline_multimer.py b/alphafold/alphafold/data/pipeline_multimer.py
index 46fa7a9..3314598 100644
--- a/alphafold/alphafold/data/pipeline_multimer.py
+++ b/alphafold/alphafold/data/pipeline_multimer.py
@@ -231,7 +231,6 @@ class DataPipeline:
     msa = msa.truncate(max_seqs=self._max_uniprot_hits)
     all_seq_features = pipeline.make_msa_features([msa])
     valid_feats = msa_pairing.MSA_FEATURES + (
-        'msa_uniprot_accession_identifiers',
         'msa_species_identifiers',
     )
     feats = {f'{k}_all_seq': v for k, v in all_seq_features.items()
@@ -240,8 +239,7 @@ class DataPipeline:
 
   def process(self,
               input_fasta_path: str,
-              msa_output_dir: str,
-              is_prokaryote: bool = False) -> pipeline.FeatureDict:
+              msa_output_dir: str) -> pipeline.FeatureDict:
     """Runs alignment tools on the input sequences and creates features."""
     with open(input_fasta_path) as f:
       input_fasta_str = f.read()
@@ -278,9 +276,7 @@ class DataPipeline:
     all_chain_features = add_assembly_features(all_chain_features)
 
     np_example = feature_processing.pair_and_merge(
-        all_chain_features=all_chain_features,
-        is_prokaryote=is_prokaryote,
-    )
+        all_chain_features=all_chain_features)
 
     # Pad MSA to avoid zero-sized extra_msa.
     np_example = pad_msa(np_example, 512)
